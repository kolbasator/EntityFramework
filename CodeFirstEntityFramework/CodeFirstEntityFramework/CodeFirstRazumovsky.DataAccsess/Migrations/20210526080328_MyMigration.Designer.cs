// <auto-generated />
using System;
using CodeFirstEntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CodeFirstEntityFramework.Migrations
{
    [DbContext(typeof(CodeFirstContext))]
    [Migration("20210526080328_MyMigration")]
    partial class MyMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("CodeFirstEntityFramework.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            Birthday = new DateTime(2001, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "John",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ActorId = 2,
                            Birthday = new DateTime(2008, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Carl",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ActorId = 3,
                            Birthday = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Mark",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ActorId = 4,
                            Birthday = new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Khabib",
                            Lastname = "Nurmagomedov"
                        },
                        new
                        {
                            ActorId = 5,
                            Birthday = new DateTime(1976, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Paul",
                            Lastname = "Chicken"
                        },
                        new
                        {
                            ActorId = 6,
                            Birthday = new DateTime(1987, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Pablo",
                            Lastname = "Eskobar"
                        },
                        new
                        {
                            ActorId = 7,
                            Birthday = new DateTime(2011, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Louis",
                            Lastname = "Gabriel"
                        },
                        new
                        {
                            ActorId = 8,
                            Birthday = new DateTime(1965, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Genry",
                            Lastname = "McChicken"
                        },
                        new
                        {
                            ActorId = 9,
                            Birthday = new DateTime(1994, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Dungeon",
                            Lastname = "Master"
                        },
                        new
                        {
                            ActorId = 10,
                            Birthday = new DateTime(2000, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Egor",
                            Lastname = "Popov"
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Birthday = new DateTime(2001, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "John",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ClientId = 2,
                            Birthday = new DateTime(1999, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "David",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ClientId = 3,
                            Birthday = new DateTime(1937, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Patrick",
                            Lastname = "Johnson"
                        },
                        new
                        {
                            ClientId = 4,
                            Birthday = new DateTime(1978, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Rock",
                            Lastname = "Lee"
                        },
                        new
                        {
                            ClientId = 5,
                            Birthday = new DateTime(2000, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Rick",
                            Lastname = "Sanchez"
                        },
                        new
                        {
                            ClientId = 6,
                            Birthday = new DateTime(1976, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Leon",
                            Lastname = "Gabriel"
                        },
                        new
                        {
                            ClientId = 7,
                            Birthday = new DateTime(1976, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Jack",
                            Lastname = "Lee"
                        },
                        new
                        {
                            ClientId = 8,
                            Birthday = new DateTime(1987, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Paul",
                            Lastname = "Sonnen"
                        },
                        new
                        {
                            ClientId = 9,
                            Birthday = new DateTime(1998, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Mark",
                            Lastname = "McGregor"
                        },
                        new
                        {
                            ClientId = 10,
                            Birthday = new DateTime(1989, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "Chail",
                            Lastname = "Sonnen"
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Copy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer");

                    b.HasKey("CopyId");

                    b.HasIndex("MovieId");

                    b.ToTable("Copies");

                    b.HasData(
                        new
                        {
                            CopyId = 1,
                            Available = false,
                            MovieId = 1
                        },
                        new
                        {
                            CopyId = 2,
                            Available = false,
                            MovieId = 2
                        },
                        new
                        {
                            CopyId = 3,
                            Available = false,
                            MovieId = 3
                        },
                        new
                        {
                            CopyId = 4,
                            Available = false,
                            MovieId = 4
                        },
                        new
                        {
                            CopyId = 5,
                            Available = false,
                            MovieId = 5
                        },
                        new
                        {
                            CopyId = 6,
                            Available = false,
                            MovieId = 6
                        },
                        new
                        {
                            CopyId = 7,
                            Available = false,
                            MovieId = 7
                        },
                        new
                        {
                            CopyId = 8,
                            Available = false,
                            MovieId = 8
                        },
                        new
                        {
                            CopyId = 9,
                            Available = false,
                            MovieId = 9
                        },
                        new
                        {
                            CopyId = 10,
                            Available = false,
                            MovieId = 10
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Employee", b =>
                {
                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.HasKey("Firstname", "Lastname");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Firstname = "Petr",
                            Lastname = "Kolosov",
                            Birthday = new DateTime(2001, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York"
                        },
                        new
                        {
                            Firstname = "Johnatan",
                            Lastname = "Galindo",
                            Birthday = new DateTime(1997, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York"
                        },
                        new
                        {
                            Firstname = "Carl",
                            Lastname = "Gabriel",
                            Birthday = new DateTime(2008, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New York"
                        },
                        new
                        {
                            Firstname = "Louis",
                            Lastname = "Lennon",
                            Birthday = new DateTime(1991, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Orleans"
                        },
                        new
                        {
                            Firstname = "Peter",
                            Lastname = "Armstrong",
                            Birthday = new DateTime(1956, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Orleans"
                        },
                        new
                        {
                            Firstname = "Peter",
                            Lastname = "Sanchez",
                            Birthday = new DateTime(1997, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "New Orleans"
                        },
                        new
                        {
                            Firstname = "John",
                            Lastname = "Johnson",
                            Birthday = new DateTime(1987, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "London"
                        },
                        new
                        {
                            Firstname = "Ben",
                            Lastname = "Johnson",
                            Birthday = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "London"
                        },
                        new
                        {
                            Firstname = "Chail",
                            Lastname = "Smith",
                            Birthday = new DateTime(1999, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "London"
                        },
                        new
                        {
                            Firstname = "Kirill",
                            Lastname = "Chebotarev",
                            Birthday = new DateTime(2017, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Moscow"
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("integer");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Terminator",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 2,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Ghostbusters",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 3,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Taxi Driver",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 4,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Frantic",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 5,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Ronin",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 6,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Leon: the Professional",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 7,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Platoon",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 8,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Mission Impossible",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 9,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "The Incredibles",
                            Year = 1984
                        },
                        new
                        {
                            MovieId = 10,
                            AgeRestriction = 12,
                            Price = 10f,
                            Title = "Analyze This",
                            Year = 1984
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Rental", b =>
                {
                    b.Property<int>("CopyId")
                        .HasColumnType("integer");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfRental")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateOfReturn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CopyId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            CopyId = 1,
                            ClientId = 1,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 17, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 17, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 2,
                            ClientId = 2,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 3,
                            ClientId = 3,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 4,
                            ClientId = 4,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 5,
                            ClientId = 5,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 6,
                            ClientId = 6,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 7,
                            ClientId = 7,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 8,
                            ClientId = 8,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 9,
                            ClientId = 9,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        },
                        new
                        {
                            CopyId = 10,
                            ClientId = 10,
                            DateOfRental = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608),
                            DateOfReturn = new DateTime(2021, 5, 26, 14, 3, 28, 18, DateTimeKind.Local).AddTicks(5608)
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Starring", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("integer");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Starring");

                    b.HasData(
                        new
                        {
                            ActorId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 8
                        },
                        new
                        {
                            ActorId = 3,
                            MovieId = 9
                        },
                        new
                        {
                            ActorId = 4,
                            MovieId = 10
                        },
                        new
                        {
                            ActorId = 5,
                            MovieId = 10
                        },
                        new
                        {
                            ActorId = 6,
                            MovieId = 6
                        },
                        new
                        {
                            ActorId = 8,
                            MovieId = 5
                        },
                        new
                        {
                            ActorId = 10,
                            MovieId = 8
                        });
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Copy", b =>
                {
                    b.HasOne("CodeFirstEntityFramework.Movie", "Movie")
                        .WithMany("Copies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Rental", b =>
                {
                    b.HasOne("CodeFirstEntityFramework.Client", "Client")
                        .WithMany("Rentals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstEntityFramework.Copy", "Copy")
                        .WithMany("Rentals")
                        .HasForeignKey("CopyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Copy");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Starring", b =>
                {
                    b.HasOne("CodeFirstEntityFramework.Actor", "Actor")
                        .WithMany("Starring")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstEntityFramework.Movie", "Movie")
                        .WithMany("Starring")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Actor", b =>
                {
                    b.Navigation("Starring");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Client", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Copy", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CodeFirstEntityFramework.Movie", b =>
                {
                    b.Navigation("Copies");

                    b.Navigation("Starring");
                });
#pragma warning restore 612, 618
        }
    }
}
